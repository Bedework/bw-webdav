<?xml version="1.0"?>

<!-- This is the main build file for the bedework webdav server classes.

     Authors: Mike Douglass   douglm@rpi.edu
-->

<project name="bedework.webdav" default="bld.all">
  <property environment="env"/>

  <!-- These may already be set from calling dir -->
  <dirname property="org.bedework.project.webdav" file="${ant.file}"/>
  <dirname property="project.home" file="${ant.file}"/>

  <property file="${project.home}/build.properties" />

  <property name="project.name" value="${edu.rpi.cmt.package.name}"/>
  <property name="project.version" value="${edu.rpi.cmt.version}"/>

  <property name="dist.home" location="${project.home}/dist"/>
  <property name="lib.dir" location="${project.home}/lib"/>
  <property name="libapi.dir" location="${project.home}/libapi"/>

  <property name="build.dir" location="${project.home}/build"/>
  <property name="buildjar" location="${build.dir}/buildjar.xml"/>

  <!-- =================================================================
       init:
       ================================================================= -->

  <target name="init" >
    <property name="org.bedework.webdavserver.base" location="${project.home}/server" />

    <mkdir dir="${dist.home}" />

    <property name="test.data.dir"
              location="${dist.home}/test-data" />

    <property name="edu.rpi.cmt.empty.dir"
              location="${dist.home}/empty-dir" />
    <mkdir dir="${edu.rpi.cmt.empty.dir}" />

    <fileset id="empty.fileset" dir="${edu.rpi.cmt.empty.dir}"
             excludes="*" />
    <!-- default to empty -->
    <fileset id="base.resource.files" refid="empty.fileset" />

    <property name="webdavserver.jar"
              location="${dist.home}/${edu.rpi.cmt.webdavserver.jar}-${project.version}.jar" />

    <!-- ==================== Compilation Classpath ==================== -->

    <path id="compile.classpath">
      <fileset dir="${lib.dir}">
         <include name="*.jar"/>
      </fileset>
      <fileset dir="${dist.home}">
         <include name="*.jar"/>
      </fileset>
    </path>
  </target>

  <!-- =================================================================
       Clean out all library files from other projects and all generated
       files in preparation for a complete rebuild.

       Needed because switching versions leaves a load of old bedework
       generated stuff in the libraries.
       ================================================================= -->
  <target name="deep-clean" depends="clean">
    <delete>
      <fileset dir="${lib.dir}">
        <include name="rpiutil-*.jar" />
        <include name="rpiaccess-*.jar" />
        <include name="bw-*.jar" />
      </fileset>
    </delete>
  </target>

  <!-- =================================================================
       Clean all generated files
       ================================================================= -->
  <target name="clean">
    <delete dir="${dist.home}" />
    <delete dir="${libapi.dir}" />
  </target>

  <!-- =================================================================
       Clean up after a build.
       ================================================================= -->
  <target name="cleanup">
    <delete dir="${edu.rpi.cmt.empty.dir}" />
  </target>

  <!-- ========================== Base build Targets ===================
       Here we have one target building the classes and interfaces that make
       up the access control suite.
       ================================================================= -->

  <target name="clean-build" depends="clean,build"
          description="Clean and compile webdav classes"/>

  <target name="clean-build-all" depends="clean,build-all"
          description="Clean and compile webdav classes"/>

  <target name="build" depends="init,build-source,cleanup"
          description="Compile webdav classes"/>

  <target name="build-all" depends="init,build-source,cleanup"
          description="Compile webdav classes"/>

  <!-- ===================== bld.all Target ===============================
     This target builds jar files ready for the deploy target.
     =================================================================== -->

  <target name="build-source" depends="bld.webdavserver" >
    <mkdir dir="${libapi.dir}" />

    <copy todir="${libapi.dir}" file="${webdavserver.jar}" />
  </target>

<!-- ==================== Javadoc Target ===============================
     The "javadoc" target creates Javadoc API documentation for the Java
     classes included in your application.  Normally, this is only required
     when preparing a distribution release, but is available as a separate
     target in case the developer wants to create Javadocs independently.
     =================================================================== -->

  <target name="javadoc" depends="init"
          description="Create Javadoc API documentation">
    <property name="destdir" location="${dist.home}/docs/api"/>
    <mkdir dir="${destdir}"/>

    <javadoc sourcepath="${org.bedework.webdavserver.base}/src:"
           classpathref="compile.classpath"
                destdir="${destdir}"
           packagenames="org.bedework.*,
                         edu.rpi.*"
                 access="public"
                 author="true"
                version="true"
          breakiterator="yes"
            windowtitle="${project.name} ${project.version} API Documentation">
      <doctitle><![CDATA[${project.name} ${project.version}<br/>API Documentation]]></doctitle>
      <header><![CDATA[${project.name} ${project.version}<br/>API Documentation]]></header>
      <link href="../../access/api" />
      <link href="../../davutil/api" />
      <link href="../../rpiutil/api" />
      <link href="${env.JAVA_HOME}/docs/api" />
    </javadoc>
  </target>

  <!-- ======================== server target =========================
       This builds the back end facade for the core of the calendar.
       ================================================================= -->

  <target name="bld.webdavserver" >
    <ant antfile="${org.bedework.webdavserver.base}/build.xml" inheritrefs="true"
         target="build" />
  </target>
</project>
